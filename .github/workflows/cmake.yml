name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 5 1 * *'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    
    
    steps: 
      - name: Reorganize
        run: |
          $temp = "${{github.workspace}}"
          $pattern = '[\\]'
          $temp = $temp -replace $pattern, '/'
          echo "xpath=${temp}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo ${{env.xpath}}/llvm/llvm
    
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: disp
    
      - name: Download LLVM
        uses: actions/checkout@v3
        with: 
          repository: llvm/llvm-project
          path: llvm
        
      - name: Download IWYU 
        uses: actions/checkout@v3
        with: 
          repository: include-what-you-use/include-what-you-use
          path: iwyu
        
      - name: Configure CMake LLVM
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -S ${{env.xpath}}/llvm/llvm -B ${{env.xpath}}/out_llvm -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLLVM_ENABLE_PROJECTS="clang" -DLLVM_ENABLE_ZLIB=FALSE -DLLVM_TARGETS_TO_BUILD="X86"
          
      - name: Build LLVM
      # Build your program with the given configuration
        run: cmake --build ${{env.xpath}}/out_llvm --config ${{env.BUILD_TYPE}}
      
      - name: Configure CMake IWYU
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -S ${{env.xpath}}/iwyu -B ${{env.xpath}}/out_iwyu -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLLVM_DIR="${{env.xpath}}/out_llvm/lib/cmake/llvm" -DClang_DIR="${{env.xpath}}/out_llvm/lib/cmake/clang"
      
      - name: Build IWYU
      # Build your program with the given configuration
        run: cmake --build ${{env.xpath}}/out_iwyu --config ${{env.BUILD_TYPE}} -j 4
      
      
      - name: Dispatch
        run: |
          xcopy .\out_iwyu\bin\Release\include-what-you-use.exe disp /y
          cd disp
          date > generated.txt
          
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "generated"
          git push
      
    
